---

application_name: "{{ emergency_console_application_name }}"

service_account: emergency-console

resources_limits_cpu: 500m
resources_limits_memory: 300Mi
resources_requests_cpu: 200m
resources_requests_memory: 100Mi

application_image: nodejs:10
application_image_namespace: openshift

imagestream_name: "{{ application_name }}"
imagestream_template: emergency-console-imagestream.yml

image_imagestream_name: "{{ application_name }}"
image_imagestream_template: emergency-console-image-is.yml

application_template: emergency-console.yml

git_url: "{{ emergency_console_git_repo }}"
git_ref: "{{ emergency_console_git_branch }}"

emergency_console_config_configmap: emergency-console-config
rhsso_config_configmap: "{{ sso_config_configmap }}"

emergency_console_config_map_token: "{{ map_token | default('') }}"
emergency_console_config_polling: 10000
kafka_bootstrap_service: "{{ kafka_cluster }}-kafka-bootstrap.{{ namespace_kafka_cluster }}.svc"
kafka_bootstrap_port: 9092
kafka_bootstrap_address: "{{ kafka_bootstrap_service }}:{{ kafka_bootstrap_port }}"
kafka_groupid: emergency-console-group
kafka_topic_mission_event: topic-mission-event
kafka_topic_responder_location_update: topic-responder-location-update
kafka_topic_incident_event: topic-incident-event
kafka_topic_incident_command: topic-incident-command
kafka_topic_responder_event: topic-responder-event
kafka_topic_responder_command: topic-responder-command

tekton_build_deploy_pipeline_name: s2i-and-deploy-nodejs
tekton_pipeline_run_template: emergency-console-tekton-pipeline-run.yml
tekton_pipeline_run_name: "{{ application_name }}-run"
tekton_workspace_pvc_template: emergency-console-tekton-pvc.yml
tekton_workspace_pvc_name: "tekton-{{ application_name }}"
tekton_image: "image-registry.openshift-image-registry.svc:5000/{{ namespace_tools }}/{{ application_name }}:latest"