---

- name: "create operatorgroup in {{ namespace }}"
  import_role:
    name: operatorgroup
  vars:
    operatorgroup_namespace: "{{ namespace }}"

- name: get packagemanifest for sso operator
  oc_obj:
    oc_binary: "{{ openshift_cli }}"
    state: list
    kind: packagemanifest
    namespace: openshift-marketplace
    name: "{{ sso_operator_packagemanifest }}"
  register: r_packagemanifest_sso

- name: set facts for sso operator
  set_fact:
    sso_operator_subscription_package_name: "{{ r_packagemanifest_sso.ansible_module_results.results[0].status.packageName }}"
    sso_operator_subscription_catalog_source: "{{ r_packagemanifest_sso.ansible_module_results.results[0].status.catalogSource }}"
    sso_operator_subscription_catalog_source_namespace: "{{ r_packagemanifest_sso.ansible_module_results.results[0].status.catalogSourceNamespace }}"

- name: "copy template for {{ sso_operator_subscription_name }} subscription resource"
  template:
    src: "{{ resources_dir }}/{{ sso_operator_subscription_template }}"
    dest: "{{ work_dir }}/sso-subscription.yml"
  vars:
    subscription_name: "{{ sso_operator_subscription_name }}"
    subscription_catalog_source: "{{ sso_operator_subscription_catalog_source }}"
    subscription_catalog_source_namespace: "{{ sso_operator_subscription_catalog_source_namespace }}"
    subscription_channel: "{{ sso_operator_subscription_channel }}"
    subscription_package_name: "{{ sso_operator_subscription_package_name }}"
    subscription_automatic_installplan_approval: "{{ sso_operator_subscription_automatic_installplan_approval }}"
    subscription_starting_csv: "{{ sso_operator_subscription_starting_csv }}"

- name: "Create sso operator subscription"
  oc_obj:
    state: present
    oc_binary: "{{ openshift_cli }}"
    name: "{{ sso_operator_subscription_name }}"
    namespace: "{{ namespace }}"
    kind: subscription
    files:
      - "{{ work_dir }}/sso-subscription.yml"

- name: wait until installplan is created
  oc_obj:
    state: list
    oc_binary: "{{ openshift_cli }}"
    kind: InstallPlan
    namespace: "{{ namespace }}"
  register: r_install_plan
  retries: 30
  delay: 5
  until:
    - r_install_plan.ansible_module_results.results | length > 0
    - r_install_plan | to_json | from_json | json_query(jmesquery) | length > 0
  vars:
    jmesquery: "ansible_module_results.results[0].items[*].spec.clusterServiceVersionNames[] | [?contains(@, 'keycloak-operator') == `true`]"

- name: manually approve installplan
  when: not sso_operator_subscription_automatic_installplan_approval
  block:
  - name: set install plan name
    set_fact:
      sso_operator_install_plan_name: "{{ r_install_plan.ansible_module_results.results[0]['items'] | to_json | from_json | json_query(query) }}"
    vars:
      query: >-
        [?starts_with(spec.clusterServiceVersionNames[0], 'keycloak-operator')].metadata.name|[0]

  - name: approve installplan
    shell: |
      {{ openshift_cli }} patch installplan {{ sso_operator_install_plan_name }} --type='merge' -p '{"spec":{"approved":true}}' -n {{ namespace }}

- name: "Wait until sso operator is active"
  oc_obj:
    state: list
    oc_binary: "{{ openshift_cli }}"
    kind: Deployment
    name: "{{ sso_operator_deployment_name }}"
    namespace: "{{ namespace }}"
  register: r_sso_operator_deployment
  retries: 30
  delay: 10
  changed_when: false
  until:
    - r_sso_operator_deployment.ansible_module_results.results[0].status.readyReplicas is defined
    - r_sso_operator_deployment.ansible_module_results.results[0].status.replicas is defined
    - >-
      r_sso_operator_deployment.ansible_module_results.results[0].status.readyReplicas ==
      r_sso_operator_deployment.ansible_module_results.results[0].status.replicas

- name: "copy keycloak custom resource template"
  template:
    src: "{{ resources_dir }}/{{ keycloak_cr_template }}"
    dest: "{{ work_dir }}/{{ keycloak_cr_template }}"

- name: "create keycloak custom resource"
  oc_obj:
    oc_binary: "{{ openshift_cli }}"
    state: present
    kind: keycloaks.keycloak.org
    name: rhsso
    namespace: "{{ namespace }}"
    files:
      - "{{ work_dir }}/{{ keycloak_cr_template }}"

- name: "create keycloak route"
  oc_obj:
    oc_binary: "{{ openshift_cli }}"
    state: present
    kind: route
    name: sso
    namespace: "{{ namespace }}"
    files:
      - "{{ resources_dir }}/{{ keycloak_route_template }}"
