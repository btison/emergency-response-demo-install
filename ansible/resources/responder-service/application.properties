spring.datasource.url=jdbc:postgresql://{{ postgresql_application_name }}.{{ namespace_postgresql }}.svc:5432/{{ database_name }}
spring.datasource.username={{ database_user }}
spring.datasource.password={{ database_password }}

narayana.dbcp.maxTotal= {{ narayana_pool_max_total }}

kafka.bootstrap-address={{ kafka_bootstrap_address }}
kafka.group-id={{ kafka_groupid }}
kafka.concurrency={{ kafka_consumer_concurrency }}

listener.destination.update-responder-command={{ kafka_responder_command_topic }}
listener.destination.responder-location-update-event={{ kafka_responder_update_location_event_topic }}
sender.destination.responder-updated-event={{ kafka_responder_event_topic }}
sender.destination.responders-created-event={{ kafka_responder_event_topic }}
sender.destination.responders-deleted-event={{ kafka_responder_event_topic }}

logging.config=file:/app/logging/logback.xml
logging.level.org.apache.kafka.clients=WARN
logging.level.org.hibernate.orm.deprecation=ERROR
logging.level.com.redhat.cajun.navy=DEBUG

opentracing.jaeger.enabled={{ jaeger_enabled }}
opentracing.jaeger.service-name={{ jaeger_service_name }}
opentracing.jaeger.udp-sender.host={{ jaeger_udp_sender_host }}
opentracing.jaeger.udp-sender.port={{ jaeger_udp_sender_port }}
# opentracing.jaeger.rate-limiting-sampler.max-traces-per-second=1
# opentracing.jaeger.probabilistic-sampler.sampling-rate=0.2
opentracing.jaeger.remote-controlled-sampler.host={{ jaeger_remote_sampler_host }}
opentracing.jaeger.remote-controlled-sampler.port={{ jaeger_remote_sampler_port }}