apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: {{ tekton_maven_build_jar_task_name }}
spec:
  workspaces:
    - name: source
  inputs:
    params:
      - name: subdirectory
        description: subdirectory in the workspace with the application source code
        default: 'source'
      - name: artifactDirectory
        description: directory in the subdirectory with the application artifacts
        default: 'upload'
  results:
    - name: maven-artifact
      description: The name of the artifact built by this task
  steps:
    - name: mvn-settings
      image: {{ java8_maven_image }}
      script: |
        #!/usr/bin/env bash
      
        DIR=$(workspaces.source.path)
        mkdir -p $DIR/.m2
        [[ -f $DIR/.m2/settings.xml ]] && \
        echo "using existing $DIR/.m2/settings.xml" && \
        cat $DIR/.m2/settings.xml && exit 0

        cat > $DIR/.m2/settings.xml <<EOF
        <settings>
          <mirrors>
            <mirror>
              <id>mirror.default</id>
              <name>mirror.default</name>
              <url>{{ maven_mirror_url }}</url>
              <mirrorOf>*</mirrorOf>
            </mirror>
          </mirrors>
          <profiles>
            <profile>
              <activation>
                <activeByDefault>true</activeByDefault>
              </activation>
              <repositories>
                <repository>
                  <id>nexus-public</id>
                  <name>Nexus Public Repository</name>
                  <url>{{ maven_mirror_url }}</url>
                  <releases>
                    <enabled>true</enabled>
                  </releases>
                  <snapshots>
                    <enabled>true</enabled>
                    <updatePolicy>always</updatePolicy>
                  </snapshots>
                </repository>
              </repositories>
            </profile>
          </profiles>
        </settings>
        EOF

        [[ -f $DIR/.m2/settings.xml ]] && cat $DIR/.m2/settings.xml
        [[ -f $DIR/.m2/settings.xml ]] || echo skipping settings 

    - name: package
      image: {{ java8_maven_image }}
      workingDir: $(workspaces.source.path)/$(inputs.params.subdirectory)
      script: >
        /usr/bin/mvn package -s $(workspaces.source.path)/.m2/settings.xml
        -Dmaven.repo.local=$(workspaces.source.path)/.m2

    - name: artifact-name
      image: {{ java8_maven_image }}
      workingDir: $(workspaces.source.path)/$(inputs.params.subdirectory)
      script: >
        #!/usr/bin/env bash 

        set -e

        DIR=$(workspaces.source.path)
        SOURCE_DIR=$DIR/$(inputs.params.subdirectory)

        MAVEN_ARGS="-s $(workspaces.source.path)/.m2/settings.xml
        -Dmaven.repo.local=$(workspaces.source.path)/.m2"

        echo "$(mvn help:evaluate -Dexpression=project.artifactId -q
        -DforceStdout $MAVEN_ARGS)-$(mvn help:evaluate
        -Dexpression=project.version -q -DforceStdout $MAVEN_ARGS).jar" | 
        tee $(results.maven-artifact.path)

    - name: copy-artifact
      image: {{ java8_maven_image }}
      script: >
        #!/usr/bin/env bash

        set -e

        DIR=$(workspaces.source.path)

        SOURCE_DIR=$DIR/$(inputs.params.subdirectory)
        
        ARTIFACT_DIR=$SOURCE_DIR/$(inputs.params.artifactDirectory)

        if [[ -d $ARTIFACT_DIR ]]; then
           echo "deleting existing directory $ARTIFACT_DIR"
           rm -rf $ARTIFACT_DIR
        fi

        mkdir -m 775 $ARTIFACT_DIR

        MAVEN_ARTIFACT_PATH=$(results.maven-artifact.path)

        if [[ ! -f $MAVEN_ARTIFACT_PATH ]]; then
           echo "file $MAVEN_ARTIFACT_PATH not found - exiting"
           exit 1
        fi

        ARTIFACT=$(cat $MAVEN_ARTIFACT_PATH)

        cp $SOURCE_DIR/target/$ARTIFACT $ARTIFACT_DIR
